// <auto-generated />
using FindSimilarServices.Fingerprinting.SQLiteDb;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FindSimilarServices.Migrations
{
    [DbContext(typeof(SQLiteDbContext))]
    [Migration("20180819150555_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846");

            modelBuilder.Entity("FindSimilarServices.Fingerprinting.SQLiteDb.Models.Hash", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("HashBin");

                    b.Property<int>("HashTable");

                    b.Property<int>("SubFingerprintId");

                    b.Property<int>("TrackId");

                    b.HasKey("Id");

                    b.HasIndex("SubFingerprintId");

                    b.HasIndex("TrackId");

                    b.ToTable("Hash");
                });

            modelBuilder.Entity("FindSimilarServices.Fingerprinting.SQLiteDb.Models.SubFingerprint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("SequenceAt");

                    b.Property<int>("SequenceNumber");

                    b.Property<int>("TrackId");

                    b.HasKey("Id");

                    b.HasIndex("TrackId");

                    b.ToTable("SubFingerprint");
                });

            modelBuilder.Entity("FindSimilarServices.Fingerprinting.SQLiteDb.Models.Track", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Album");

                    b.Property<string>("Artist");

                    b.Property<string>("FilePath");

                    b.Property<string>("ISRC");

                    b.Property<int>("ReleaseYear");

                    b.Property<string>("Title");

                    b.Property<double>("TrackLengthSec");

                    b.HasKey("Id");

                    b.ToTable("Track");
                });

            modelBuilder.Entity("FindSimilarServices.Fingerprinting.SQLiteDb.Models.Hash", b =>
                {
                    b.HasOne("FindSimilarServices.Fingerprinting.SQLiteDb.Models.SubFingerprint", "SubFingerprint")
                        .WithMany("Hashes")
                        .HasForeignKey("SubFingerprintId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FindSimilarServices.Fingerprinting.SQLiteDb.Models.Track", "Track")
                        .WithMany()
                        .HasForeignKey("TrackId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FindSimilarServices.Fingerprinting.SQLiteDb.Models.SubFingerprint", b =>
                {
                    b.HasOne("FindSimilarServices.Fingerprinting.SQLiteDb.Models.Track", "Track")
                        .WithMany()
                        .HasForeignKey("TrackId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
