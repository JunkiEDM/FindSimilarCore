@using SoundFingerprinting.DAO.Data;

@{
    ViewData["Title"] = "Home Page";
}

@section Head {
    <link rel="stylesheet" href="/css/stickyaudioplayer.css">  
}

<div class="table-responsive-sm">  
<table id="data" class="table table-sm">
    <thead>
        <tr>
            <th scope="col">#</th>
            <th scope="col">File</th>
            <th scope="col">Seconds</th>
            <th scope="col">Action</th>
        </tr>
    </thead>
    <tbody>

@foreach (TrackData track in ViewBag.Tracks) {
        <tr>
            <th scope="row">
                <i class="far fa-play-circle" id="playPauseIcon"></i>
                <audio preload="none" src="/api/streaming/@track.TrackReference.Id" title="@track.Title"></audio>
            </th>            
            <td><small>@track.Title</small></td>
            <td><small>@track.Length.ToString("N")</small></td>
            <td>
                <div class="dropdown">
                <button class="btn btn-outline-info btn-sm dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Action
                </button>
                <div class="dropdown-menu" aria-labelledby="dropdownRowMenuButton">
                    <a class="dropdown-item" asp-controller="Home" asp-action="FindSimilar" asp-route-id="@track.TrackReference.Id">Find Similar</a>                    
                    <a class="dropdown-item" asp-controller="Home" asp-action="OpenDirectory" asp-route-id="@track.TrackReference.Id">Open Directory</a>                    
                    @{
                        <!-- var pathName = System.IO.Path.GetDirectoryName(track.Title); -->
                        <!-- var uri = new System.Uri(pathName); -->
                        <!-- var converted = uri.AbsoluteUri; -->
                    }
                    <!-- <a class="dropdown-item" onClick="window.open('converted', '_blank')">Open Local File</a>                  -->
                </div>
                </div>                
            </td>
        </tr>
}
    </tbody>
</table>
</div>

<div class="modal" id="editForm" tabindex="-1" role="dialog" aria-labelledby="modalCenterTitle" aria-hidden="true">
    <form>
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="modalCenterTitle">Edit</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-inline mb-2">
                        <input type="text" class="form-control mr-2" id="editRowText" placeholder="To edit...">
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save changes</button>
                </div>
            </div>
        </div>
    </form>
</div>

<div class="bg-dark fixed-bottom" id="waveform"></div>

@section Scripts { 
    @* 
    Javascripts section
    *@

<script src="//cdnjs.cloudflare.com/ajax/libs/wavesurfer.js/2.0.6/wavesurfer.min.js"></script>
<script type="text/javascript">

// hide edit area
$('#editForm').hide();
var editing = false;

// variable that holds all table rows
var tableRows = $('#data tbody tr');

// variable that holds the window object
var w = $(window);

var wavesurfer = WaveSurfer.create({
    container: '#waveform',
    backend: 'MediaElement',
    // barWidth: 1,
    waveColor: '#aecfe3',
    progressColor: '#f48a23',
    cursorColor: '#f27d0c',
    // cursorWidth: 2,
    height: 50,
    hideScrollbar: true,
    // minPxPerSec: 1,
    normalize: true
});

wavesurfer.on('ready', function () {
    wavesurfer.play();
});

wavesurfer.on('pause', function() {
    setPlayPauseIcon();
});

wavesurfer.on('play', function() {
    setPlayPauseIcon();
});

function setPlayPauseIcon() 
{
    // find currently selected row index
    var tableRowIndex = $('#data tbody tr.table-active').index();
    
    // check there is a row selected
    if(tableRowIndex >= 0 && tableRowIndex < tableRows.length)
    {
        // find audio icon and set it to not playing
        var selectedTableRow = $('#data tbody tr:eq('+tableRowIndex+')');
        if(selectedTableRow.length > 0)
        {
            var audioPlayerIcon = selectedTableRow.find('i');
            SetAudioPlayerIcon(audioPlayerIcon, wavesurfer.isPlaying());
        }        
    }
}

function highlightRow(tableRowIndex) 
{
    // if .table-active has reached the last, start again
    if ((tableRowIndex + 1) > tableRows.length )
        tableRowIndex = 0;    
    
    // if .table-active has reached the furst, start from the end
    if ((tableRowIndex < 0))
       tableRowIndex = tableRows.length - 1;

    // check if element exists
    var selectedTableRow = $('#data tbody tr:eq('+tableRowIndex+')');
    if(selectedTableRow.length > 0)
    {
        // remove other highlights from all table rows
        tableRows.removeClass('table-active');
        
        // highlight your target
        selectedTableRow.addClass('table-active');

        // and make sure to scroll the row into view
        w.scrollTop( selectedTableRow.offset().top - (w.height()/2) );
        
        // and play audio
        playRow(tableRowIndex);
    }
}

function playRow(tableRowIndex) 
{
    // check if element exists
    var selectedTableRow = $('#data tbody tr:eq('+tableRowIndex+')');
    if(selectedTableRow.length > 0)
    {
        // find all audio icons and set it to not playing
        $('audio').each(function() 
        {
            var audioPlayerIcon = $(this).siblings('i');
            SetAudioPlayerIcon(audioPlayerIcon, false);
        });

        // get the correct audio player
        var audioObject = selectedTableRow.find('audio');
        var audioPlayer = audioObject[0];

        // load the audio source
        wavesurfer.stop();
        wavesurfer.load(audioPlayer.src);
    }
}

function SetAudioPlayerIcon(audioPlayerIcon, isPlaying) {
    if (isPlaying) {
            audioPlayerIcon.removeClass('fa-play-circle');
            audioPlayerIcon.addClass('fa-pause-circle');
            audioPlayerIcon.css("color", "red");
    } else {
            audioPlayerIcon.removeClass('fa-pause-circle');
            audioPlayerIcon.addClass('fa-play-circle');
            audioPlayerIcon.css("color", "black");
    }
}

$('#goto_first').click(function() {
    highlightRow(0);
});

$('#goto_prev').click(function() {
    highlightRow($('#data tbody tr.table-active').index() - 1);
});

$('#goto_next').click(function() {
    highlightRow($('#data tbody tr.table-active').index() + 1);
});

$('#goto_last').click(function() {
    highlightRow($('#data tbody tr:last').index());
});


// Show edit form
function displayEditForm() {
    editing = true;
    $('#editForm').show();

    // find currently selected row index
    var tableRowIndex = $('#data tbody tr.table-active').index();
   
    // check if element exists
    var selectedTableRow = $('#data tbody tr:eq('+tableRowIndex+')');
    if(selectedTableRow.length > 0)
    {    
        // ensure the target is highlightRowed
        selectedTableRow.addClass('table-active');

        $('#editForm #editRowText').val(tableRowIndex);
        $('#editForm #editRowText').select();
    }
}

// user saves edits
$('#editForm form').submit(function (e) {
    editing = false;
    e.preventDefault();

    // Ajax to update value in database
    $.get('#', '', function () {
        $('#editForm').hide();
        alert('Saving ' + $('#editForm #editRowText').val());
    });    
});

// user can cancel edit by pressing escape
$('#editForm').keydown(function (e) {
    if (editing && e.which == 27) {
        editing = false;
        $('#editForm').hide();
    }
});

// for some reason we need to re-add the way jquery closes modals
$('[data-dismiss="modal"]').on('click', function() {
    $('#editForm').hide();
});

// handle key presses
$(document).keydown(function (e) {
    
    if (!editing) {        
        switch(e.which) 
        {        
            case 38:
                // up arrow
                e.preventDefault();
                // $('#goto_prev').trigger('click');
                highlightRow($('#data tbody tr.table-active').index() - 1);
                break;
            case 40:
                // down Arrow
                e.preventDefault();
                // $('#goto_next').trigger('click');
                highlightRow($('#data tbody tr.table-active').index() + 1);
                break;
            case 13:
                // enter
                break;
            case 32:
                // spacebar
                e.preventDefault();
                wavesurfer.playPause();
                break;
            case 113:
                // F2
                e.preventDefault();
                displayEditForm();
                break;
        }
    }
 });

// attach an onclick event handler to the table rows 
// except the playPauseIcon and the dropdown menu
tableRows.click( function(e) {
    if ( !$(e.target).is('[class*="dropdown"]')
        && !$(e.target).is("#playPauseIcon") ) {
        e.stopPropagation();
        editing = false;
        $('#editForm').hide();
        highlightRow(($(this).index()));
    }
});

// if clicking on the play icon, either highlight (e.g. play a row)
// or pause the audio
tableRows.click( function(e) {
    if ( $(e.target).is("#playPauseIcon") ) {
        editing = false;
        $('#editForm').hide();

        // find clicked row index
        var clickedRowIndex = $(this).index();

        // find currently selected row index
        var tableRowIndex = $('#data tbody tr.table-active').index();
    
        // check there is a row selected
        if(tableRowIndex >= 0 && tableRowIndex < tableRows.length)
        {    
            if (tableRowIndex == clickedRowIndex) {
                wavesurfer.playPause();
                return;
            }
        }

        highlightRow(clickedRowIndex);
    }
});


</script>
}